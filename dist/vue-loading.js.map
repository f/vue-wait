{"version":3,"sources":["webpack://VueLoading/webpack/universalModuleDefinition","webpack://VueLoading/webpack/bootstrap","webpack://VueLoading/src/components/v-loading.vue","webpack://VueLoading/./src/components/v-loading.vue?15ba","webpack://VueLoading/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://VueLoading/./src/components/v-loading.vue","webpack://VueLoading/./src/components/v-loading.vue?04ab","webpack://VueLoading/./src/utils.js","webpack://VueLoading/./src/vue-loading.js","webpack://VueLoading/./src/vuex/store.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/BA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB;AACzF;;;;;;;;;;;;;;;ACDA;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5FkC;AAClC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gF;;;;;;;;;;;;;;wCClB2H,wMAAoB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACrBC;;AAED;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,WAAW;AAC3D,6CAA6C,WAAW;AACxD;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,2BAA2B,WAAW,GAAG,OAAO;AAChD;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,4BAA4B;AACzC,WAAW,aAAa;;AAExB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO,GAAG,OAAO;AAC9D,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;;;;;;;;ACxK0D;;AAE1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,oBAAoB,SAAS;AAC7B,kBAAkB,SAAS;AAC3B,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA","file":"vue-loading.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueLoading\"] = factory();\n\telse\n\t\troot[\"VueLoading\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<template lang=\"html\">\n  <div>\n    <span v-if='isLoading'>\n      <slot name='loading'></slot>\n      <span v-if='message'>{{ message }}</span>\n    </span>\n    <slot v-if='!isLoading'></slot>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'v-loading',\n    props: {\n      visible: Boolean,\n      loader: {\n        type: String,\n        required: true,\n      },\n      message: String,\n    },\n    computed: {\n      isLoading() {\n        if (this.visible) {\n          return this.visible;\n        }\n        if (this.loader) {\n          return this.__$vueLoadingInstance.isLoading(this.loader);\n        }\n        return this.__$vueLoadingInstance.anyLoading;\n      }\n    }\n  }\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.isLoading)?_c('span',[_vm._t(\"loading\"),_vm._v(\" \"),(_vm.message)?_c('span',[_vm._v(_vm._s(_vm.message))]):_vm._e()],2):_vm._e(),_vm._v(\" \"),(!_vm.isLoading)?_vm._t(\"default\"):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./v-loading.vue?vue&type=template&id=53798c0c&lang=html\"\nimport script from \"./v-loading.vue?vue&type=script&lang=js\"\nexport * from \"./v-loading.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./v-loading.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./v-loading.vue?vue&type=script&lang=js\"","export function isLoading(loaders, loader) {\n  if (loader instanceof RegExp) {\n    return loaders.filter(l => l.match(loader)).length > 0;\n  }\n  return Array.isArray(loader)\n    ? loaders.some(v => loader.includes(v))\n    : loaders.indexOf(loader) > -1;\n}\n\nexport function anyLoading(loaders) {\n  return loaders.length > 0;\n}\n\nexport function startLoading(loaders, loader) {\n  return uniqArray([loaders, ...loader]);\n}\n\nexport function endLoading(loaders, loader) {\n  return uniqArray(loaders).filter(l => l !== loader);\n}\n\nexport function uniqArray(array) {\n  return array.filter((el, index, arr) => index == arr.indexOf(el));\n}\n\nexport function nodeIsDebug() {\n  return process.env.NODE_ENV !== \"production\";\n}\n","import {\n  isLoading,\n  anyLoading,\n  startLoading,\n  endLoading,\n  nodeIsDebug\n} from \"./utils\";\n\nimport vuexStore from \"./vuex/store\";\nimport vLoading from \"./components/v-loading.vue\";\n\nexport default class VueLoading {\n  constructor(options = {}) {\n    const defaults = {\n      useVuex: false,\n      componentName: vLoading.name,\n      moduleName: \"loading\",\n      registerComponent: true\n    };\n    this.options = {\n      ...defaults,\n      ...options\n    };\n    this.initialized = false;\n  }\n\n  init(Vue, store) {\n    if (isDebug() && !install.installed) {\n      console.warn(\n        `[vuex-loading] not installed. Make sure to call \\`Vue.use(VuexLoading)\\` before init root instance.`\n      );\n    }\n\n    if (this.initialized) {\n      return;\n    }\n\n    if (this.options.registerComponent) {\n      Vue.component(this.options.componentName, vLoading);\n    }\n\n    if (this.options.useVuex) {\n      if (!store) {\n        throw new Error(\"[vuex-loading] Vuex not initialized.\");\n      }\n      this.store = store;\n      store.registerModule(this.options.moduleName, vuexStore);\n\n      this.stateHandler = new Vue({\n        computed: {\n          isLoading: loader => store.getters[`${moduleName}/isLoading`](loader),\n          anyLoading: () => store.getters[`${moduleName}/anyLoading`]\n        }\n      });\n    } else {\n      this.stateHandler = new Vue({\n        data() {\n          return {\n            activeLoaders: []\n          };\n        },\n        computed: {\n          isLoading: loader => isLoading(this.activeLoaders, loader),\n          anyLoading: () => anyLoading(this.activeLoaders)\n        },\n        methods: {\n          startLoading(loader) {\n            this.activeLoaders = startLoading(this.activeLoaders, loader);\n          },\n          endLoading(loader) {\n            this.activeLoaders = endLoading(this.activeLoaders, loader);\n          }\n        }\n      });\n    }\n\n    this.initialized = true;\n  }\n\n  get anyLoading() {\n    return this.stateHandler.anyLoading;\n  }\n\n  isLoading(loader) {\n    return this.stateHandler.isLoading(loader);\n  }\n\n  dispatchLoaderAction(action, loader) {\n    const { moduleName } = this.options;\n    this.store.dispatch(`${moduleName}/${action}`, loader, {\n      root: true\n    });\n  }\n\n  startLoading(loader) {\n    if (this.options.useVuex) {\n      this.dispatchLoaderAction(\"startLoading\", loader);\n      return;\n    }\n    this.stateHandler.startLoading(loader);\n  }\n\n  endLoading(loader) {\n    if (this.options.useVuex) {\n      this.dispatchLoaderAction(\"endLoading\", loader);\n      return;\n    }\n    this.stateHandler.endLoading(loader);\n  }\n}\n\nexport function install(Vue) {\n  if (install.installed && Vue) {\n    if (isDebug()) {\n      console.warn(\n        \"[vuex-loading] already installed. Vue.use(VuexLoading) should be called only once.\"\n      );\n    }\n    return;\n  }\n\n  Vue.mixin({\n    /**\n     * VueLoading init hook, injected into each instances init hooks list.\n     */\n    beforeCreate() {\n      const { vueLoading, store, parent } = this.$options;\n      let { helperName } = this.$options;\n\n      if (!helperName) {\n        helperName = \"$vueLoading\";\n      }\n\n      let instance = null;\n      if (vueLoading) {\n        instance =\n          typeof vueLoading === \"function\" ? new vueLoading() : vueLoading;\n        // Inject store\n        instance.init(Vue, store);\n      } else if (parent && parent[helperName]) {\n        instance = parent[helperName];\n        instance.init(Vue, parent.$store);\n      }\n\n      // Store helper for internal use\n      this.__$vueLoadingInstance = instance;\n    }\n  });\n\n  install.installed = true;\n}\n\nexport function mapLoadingActions(module, actions) {\n  const mappings = {};\n  Object.keys(actions).forEach(action => {\n    const loader = actions[action];\n    mappings[action] = async (...args) => {\n      try {\n        this.__$vueLoadingInstance.startLoading(loader);\n        return await this.$store.dispatch(`${module}/${action}`);\n      } finally {\n        this.__$vueLoadingInstance.endLoading(loader);\n      }\n    };\n  });\n  return mappings;\n}\n\nVueLoading.install = install;\n","import { isLoading, anyLoading, startLoading, endLoading } from \"../utils\";\n\nconst mutations = {\n  START_LOADING: \"START_LOADING\",\n  END_LOADING: \"END_LOADING\"\n};\n\nexport default {\n  namespaced: true,\n  state: {\n    activeLoaders: []\n  },\n  getters: {\n    isLoading: state => loader => isLoading(state.activeLoaders, loader),\n    anyLoading: state => anyLoading(state.activeLoaders)\n  },\n  actions: {\n    startLoading: ({ commit }, loader) => commit(mutations.START_LOADING, loader),\n    endLoading: ({ commit }, loader) => commit(mutations.END_LOADING, loader)\n  },\n  mutations: {\n    [mutations.START_LOADING](state, loader) {\n      state.activeLoaders = startLoading(state.activeLoaders, loader);\n    },\n    [mutations.END_LOADING](state, loader) {\n      state.activeLoaders = endLoading(state.activeLoaders, loader);\n    }\n  }\n};\n"],"sourceRoot":""}